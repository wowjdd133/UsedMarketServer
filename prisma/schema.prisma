generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Verification {
  id Int @id @default(autoincrement())
  device_id String
  code Int
  created_at DateTime @default(now())
}

model User {
  id           Int           @id @default(autoincrement())
  device_id String @unique
  name         String?
  phone_number String        @unique
  url String @default("https://used-market.s3.ap-northeast-2.amazonaws.com/profile/default.png")
  created_at   DateTime      @default(now())  
  is_neighborhood_certification_complete Boolean @default(false)
  current_hashed_refresh_token String?
  exited_at DateTime?
  district_id Int
  score Float @default(36.5)
  status UserStatus @default(ACTIVE)
  
  user_score UserScore[]
  district District @relation(fields: [district_id], references: [id])
  offer_price OfferPrice[]
  wish_product WishProduct[]
  review Review[]
}

model UserScore {
  id Int @id @default(autoincrement())
  user_id Int

  user User @relation(fields: [user_id], references: [id])
}

model Product {
  id Int @id @default(autoincrement())
  title String
  price Int
  created_at DateTime @default(now())
  category_id Int
  district_id Int
  view_count Int @default(0)
  description String?
  is_able_offer Boolean @default(false)
  status ProductStatus @default(SELL)

  category Category @relation(fields: [category_id], references: [id])
  district District @relation(fields: [district_id], references: [id])

  offer_price OfferPrice[]
  wish_product WishProduct[]
  review Review[]
  product_image ProductImage[]
}

model ProductImage {
  id Int @id @default(autoincrement())
  product_id Int
  key String
  url String

  product Product @relation(fields: [product_id], references: [id])
}

model Review {
  id Int @id @default(autoincrement())
  user_id Int
  product_id Int
  is_wanted_repurchase Boolean
  user User @relation(fields: [user_id], references: [id])
  product Product @relation(fields: [product_id], references: [id])
}

model WishProduct {
  id Int @id @default(autoincrement())
  user_id Int
  product_id Int

  user User @relation(fields: [user_id], references: [id])
  product Product @relation(fields: [product_id], references: [id])
}

model OfferPrice {
  id Int @id @default(autoincrement())
  is_accept Boolean?
  user_id Int
  product_id Int

  user User @relation(fields: [user_id], references: [id])
  product Product @relation(fields: [product_id], references: [id])
}

model Category {
  id Int @id @default(autoincrement())
  name String

  products Product[]
}

model District {
  id           Int    @id @default(autoincrement())
  sig_cd       String
  sig_kor_name String
  sig_eng_name String
  lat          Float
  lng          Float

  users User[]
  products Product[]
}

enum ProductStatus {
  SELL
  RESERVATION
  SOLD_OUT
}

enum UserStatus {
  ACTIVE
  EXIT
}